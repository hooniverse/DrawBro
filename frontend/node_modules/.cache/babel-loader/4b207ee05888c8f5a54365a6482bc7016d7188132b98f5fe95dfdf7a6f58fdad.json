{"ast":null,"code":"var _jsxFileName = \"/Users/hooniverse/Desktop/draw/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport Roadmap from './gu/Roadmap';\nimport LoadingPage from './component/LoadingPage';\nimport MainApp from './MainApp';\nimport Page from './gu/Page';\nimport Upload from './gu/Upload'; // Upload 컴포넌트 import\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [loadingComplete, setLoadingComplete] = useState(false); // 로딩 상태 관리\n  const [showRoadmap, setShowRoadmap] = useState(false); // Roadmap 컴포넌트 표시 상태 관리\n  const [showUpload, setShowUpload] = useState(false); // Upload 컴포넌트 표시 상태 관리\n\n  const handleButtonClick = () => {\n    setShowRoadmap(true); // 버튼 클릭 시 Roadmap 컴포넌트를 표시하도록 상태 변경\n  };\n  const handleUploadClick = () => {\n    setShowUpload(true); // 버튼 클릭 시 Upload 컴포넌트를 표시하도록 상태 변경\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-frame\",\n    children: showUpload ?\n    /*#__PURE__*/\n    // Upload 컴포넌트를 표시할지 여부에 따라 컴포넌트 렌더링 결정\n    _jsxDEV(Upload, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this) : showRoadmap ?\n    /*#__PURE__*/\n    // Roadmap을 표시할지 여부에 따라 컴포넌트 렌더링 결정\n    _jsxDEV(Roadmap, {\n      handleUploadClick: handleUploadClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this) // Roadmap 컴포넌트에 클릭 핸들러 전달\n    : loadingComplete ? /*#__PURE__*/_jsxDEV(Page, {\n      handleButtonClick: handleButtonClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this) // Page 컴포넌트에 클릭 핸들러 전달\n    : /*#__PURE__*/_jsxDEV(LoadingPage, {\n      setLoadingComplete: setLoadingComplete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this) // 로딩 페이지 표시\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"x/mfWGZAe317eiAFJbZUIaT4ekY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Roadmap","LoadingPage","MainApp","Page","Upload","jsxDEV","_jsxDEV","App","_s","loadingComplete","setLoadingComplete","showRoadmap","setShowRoadmap","showUpload","setShowUpload","handleButtonClick","handleUploadClick","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/hooniverse/Desktop/draw/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport Roadmap from './gu/Roadmap';\nimport LoadingPage from './component/LoadingPage';\nimport MainApp from './MainApp';\nimport Page from './gu/Page';\nimport Upload from './gu/Upload'; // Upload 컴포넌트 import\n\nconst App = () => {\n  const [loadingComplete, setLoadingComplete] = useState(false); // 로딩 상태 관리\n  const [showRoadmap, setShowRoadmap] = useState(false); // Roadmap 컴포넌트 표시 상태 관리\n  const [showUpload, setShowUpload] = useState(false); // Upload 컴포넌트 표시 상태 관리\n\n  const handleButtonClick = () => {\n    setShowRoadmap(true); // 버튼 클릭 시 Roadmap 컴포넌트를 표시하도록 상태 변경\n  };\n\n  const handleUploadClick = () => {\n    setShowUpload(true); // 버튼 클릭 시 Upload 컴포넌트를 표시하도록 상태 변경\n  };\n\n  return (\n    <div className=\"app-frame\">\n      {showUpload ? ( // Upload 컴포넌트를 표시할지 여부에 따라 컴포넌트 렌더링 결정\n        <Upload />\n      ) : showRoadmap ? ( // Roadmap을 표시할지 여부에 따라 컴포넌트 렌더링 결정\n        <Roadmap handleUploadClick={handleUploadClick} /> // Roadmap 컴포넌트에 클릭 핸들러 전달\n      ) : loadingComplete ? (\n        <Page handleButtonClick={handleButtonClick} /> // Page 컴포넌트에 클릭 핸들러 전달\n      ) : (\n        <LoadingPage setLoadingComplete={setLoadingComplete} /> // 로딩 페이지 표시\n      )}\n    </div>\n  );\n};\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,WAAW;AAClB,OAAOC,OAAO,MAAM,cAAc;AAClC,OAAOC,WAAW,MAAM,yBAAyB;AACjD,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,IAAI,MAAM,WAAW;AAC5B,OAAOC,MAAM,MAAM,aAAa,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;EAC/D,MAAM,CAACY,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;EACvD,MAAM,CAACc,UAAU,EAAEC,aAAa,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;;EAErD,MAAMgB,iBAAiB,GAAGA,CAAA,KAAM;IAC9BH,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC;EACxB,CAAC;EAED,MAAMI,iBAAiB,GAAGA,CAAA,KAAM;IAC9BF,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC;EACvB,CAAC;EAED,oBACER,OAAA;IAAKW,SAAS,EAAC,WAAW;IAAAC,QAAA,EACvBL,UAAU;IAAA;IAAK;IACdP,OAAA,CAACF,MAAM;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,GACRX,WAAW;IAAA;IAAK;IAClBL,OAAA,CAACN,OAAO;MAACgB,iBAAiB,EAAEA;IAAkB;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,CAAC;IAAA,EAChDb,eAAe,gBACjBH,OAAA,CAACH,IAAI;MAACY,iBAAiB,EAAEA;IAAkB;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,CAAC;IAAA,eAE/ChB,OAAA,CAACL,WAAW;MAACS,kBAAkB,EAAEA;IAAmB;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,CAAC;EACzD;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACd,EAAA,CA1BID,GAAG;AAAAgB,EAAA,GAAHhB,GAAG;AA4BT,eAAeA,GAAG;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}